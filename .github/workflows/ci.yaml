name: CI

on:
  push:
    branches: [ main, locks ]
  pull_request:
    branches: [ main ]
  schedule:
    # Make sure everything is still working by running the CI weekly.
    - cron: "0 5 * * 1"

jobs:
  compile_native:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{  }}

  setup:
    runs-on: ubuntu-latest
    outputs:
      dart-version: ${{ steps.setup-dart.outputs.dart-version }}
      cache-key: dart-packages-${{ steps.deps-after.outputs.lockfiles }}
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        id: setup-dart
        with:
          sdk: beta
      - uses: actions/cache/restore@v4
        with:
          path: |
            ${{ env.PUB_CACHE }}
            shelf_multipart/pubspec.lock
            locks/pubspec.lock
          # We can only use fallback keys here since we don't know the lockfile contents yet.
          key: dart-packages-stub
          restore-keys: |
            dart-packages-

      - name: "Hash pubspec lockfiles before pub upgrade"
        id: deps-before
        run: |
          echo "lockfiles=${{ hashFiles('**/pubspec.lock') }}" >> $GITHUB_OUTPUT
      - name: Install dependencies
        run: |-
          pushd shelf_multipart
          dart pub upgrade
          popd
          pushd locks
          dart pub upgrade
          popd
      - name: "Hash pubspec lockfiles after pub upgrade"
        id: deps-after
        run: |
          echo "lockfiles=${{ hashFiles('**/pubspec.lock') }}" >> $GITHUB_OUTPUT

      - name: "Update cache due to changed pubspec.lock"
        if: ${{ !failure() && ( steps.deps-after.outputs.lockfiles != steps.deps-before.outputs.lockfiles) }}
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ env.PUB_CACHE }}
            shelf_multipart/pubspec.lock
            locks/pubspec.lock
          key: dart-packages-${{ steps.deps-after.outputs.lockfiles }}

  shelf_multipart:
    runs-on: ubuntu-latest
    needs: setup
    defaults:
      run:
        working-directory: shelf_multipart

    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ needs.setup.outputs.dart-version }}
      - uses: actions/cache/restore@v4
        with:
          path: |
            ${{ env.PUB_CACHE }}
            shelf_multipart/pubspec.lock
          key: ${{ needs.setup.outputs.cache-key }}
          fail-on-cache-miss: true
      - name: Install dependencies
        run: dart pub get --offline
      - name: Verify format
        run: dart format --output=none --set-exit-if-changed .
      - name: Analyze project
        run: dart analyze --fatal-infos
      - name: Run tests
        run: dart test
